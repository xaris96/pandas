# dialects/postgresql/__init__.py
# Copyright (C) 2005-2025 the SQLAlchemy authors and contributors
# <see AUTHORS file>
#
# This module is part of SQLAlchemy and is released under
# the MIT License: https://www.opensource.org/licenses/mit-license.php
# mypy: ignore-errors

from types import ModuleType

from . import (  # noqa # keep above base and other dialects
    array as arraylib,
    base,
)
from . import asyncpg  # noqa
from . import pg8000  # noqa
from . import psycopg2  # noqa
from . import psycopg2cffi  # noqa
from . import psycopg  # noqa
from .array import (
    ARRAY,
    All,
    Any,
    array,
)
from .base import (
    BIGINT,
    BOOLEAN,
    CHAR,
    DATE,
    DOMAIN,
    DOUBLE_PRECISION,
    FLOAT,
    INTEGER,
    NUMERIC,
    REAL,
    SMALLINT,
    TEXT,
    UUID,
    VARCHAR,
)
from .dml import (
    Insert,
    insert,
)
from .ext import (
    ExcludeConstraint,
    aggregate_order_by,
    array_agg,
    phraseto_tsquery,
    plainto_tsquery,
    to_tsquery,
    to_tsvector,
    ts_headline,
    websearch_to_tsquery,
)
from .hstore import (
    HSTORE,
    hstore,
)
from .json import (
    JSON,
    JSONB,
    JSONPATH,
)
from .named_types import (
    ENUM,
    CreateDomainType,
    CreateEnumType,
    DropDomainType,
    DropEnumType,
    NamedType,
)
from .ranges import (
    DATEMULTIRANGE,
    DATERANGE,
    INT4MULTIRANGE,
    INT4RANGE,
    INT8MULTIRANGE,
    INT8RANGE,
    NUMMULTIRANGE,
    NUMRANGE,
    TSMULTIRANGE,
    TSRANGE,
    TSTZMULTIRANGE,
    TSTZRANGE,
    AbstractMultiRange,
    AbstractRange,
    AbstractSingleRange,
    MultiRange,
    Range,
)
from .types import (
    BIT,
    BYTEA,
    CIDR,
    CITEXT,
    INET,
    INTERVAL,
    MACADDR,
    MACADDR8,
    MONEY,
    OID,
    REGCLASS,
    REGCONFIG,
    TIME,
    TIMESTAMP,
    TSQUERY,
    TSVECTOR,
)

# Alias psycopg also as psycopg_async
psycopg_async = type(
    "psycopg_async", (ModuleType,), {"dialect": psycopg.dialect_async}
)

base.dialect = dialect = psycopg2.dialect


__all__ = (
    "INTEGER",
    "BIGINT",
    "SMALLINT",
    "VARCHAR",
    "CHAR",
    "TEXT",
    "NUMERIC",
    "FLOAT",
    "REAL",
    "INET",
    "CIDR",
    "CITEXT",
    "UUID",
    "BIT",
    "MACADDR",
    "MACADDR8",
    "MONEY",
    "OID",
    "REGCLASS",
    "REGCONFIG",
    "TSQUERY",
    "TSVECTOR",
    "DOUBLE_PRECISION",
    "TIMESTAMP",
    "TIME",
    "DATE",
    "BYTEA",
    "BOOLEAN",
    "INTERVAL",
    "ARRAY",
    "ENUM",
    "DOMAIN",
    "dialect",
    "array",
    "HSTORE",
    "hstore",
    "INT4RANGE",
    "INT8RANGE",
    "NUMRANGE",
    "DATERANGE",
    "INT4MULTIRANGE",
    "INT8MULTIRANGE",
    "NUMMULTIRANGE",
    "DATEMULTIRANGE",
    "TSVECTOR",
    "TSRANGE",
    "TSTZRANGE",
    "TSMULTIRANGE",
    "TSTZMULTIRANGE",
    "JSON",
    "JSONB",
    "JSONPATH",
    "Any",
    "All",
    "DropEnumType",
    "DropDomainType",
    "CreateDomainType",
    "NamedType",
    "CreateEnumType",
    "ExcludeConstraint",
    "Range",
    "aggregate_order_by",
    "array_agg",
    "insert",
    "Insert",
)
