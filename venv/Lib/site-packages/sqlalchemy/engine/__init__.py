# engine/__init__.py
# Copyright (C) 2005-2025 the SQLAlchemy authors and contributors
# <see AUTHORS file>
#
# This module is part of SQLAlchemy and is released under
# the MIT License: https://www.opensource.org/licenses/mit-license.php

"""SQL connections, SQL execution and high-level DB-API interface.

The engine package defines the basic components used to interface
DB-API modules with higher-level statement construction,
connection-management, execution and result contexts.  The primary
"entry point" class into this package is the Engine and its public
constructor ``create_engine()``.

"""

from . import (
    events as events,
    util as util,
)
from ..sql import ddl as ddl
from .base import (
    Connection as Connection,
    Engine as Engine,
    NestedTransaction as NestedTransaction,
    RootTransaction as RootTransaction,
    Transaction as Transaction,
    TwoPhaseTransaction as TwoPhaseTransaction,
)
from .create import (
    create_engine as create_engine,
    create_pool_from_url as create_pool_from_url,
    engine_from_config as engine_from_config,
)
from .cursor import (
    CursorResult as CursorResult,
    ResultProxy as ResultProxy,
)
from .interfaces import (
    AdaptedConnection as AdaptedConnection,
    BindTyping as BindTyping,
    Compiled as Compiled,
    Connectable as Connectable,
    ConnectArgsType as ConnectArgsType,
    ConnectionEventsTarget as ConnectionEventsTarget,
    CreateEnginePlugin as CreateEnginePlugin,
    Dialect as Dialect,
    ExceptionContext as ExceptionContext,
    ExecutionContext as ExecutionContext,
    TypeCompiler as TypeCompiler,
)
from .mock import create_mock_engine as create_mock_engine
from .reflection import (
    Inspector as Inspector,
    ObjectKind as ObjectKind,
    ObjectScope as ObjectScope,
)
from .result import (
    ChunkedIteratorResult as ChunkedIteratorResult,
    FilterResult as FilterResult,
    FrozenResult as FrozenResult,
    IteratorResult as IteratorResult,
    MappingResult as MappingResult,
    MergedResult as MergedResult,
    Result as Result,
    ScalarResult as ScalarResult,
    TupleResult as TupleResult,
    result_tuple as result_tuple,
)
from .row import (
    BaseRow as BaseRow,
    Row as Row,
    RowMapping as RowMapping,
)
from .url import (
    URL as URL,
    make_url as make_url,
)
from .util import connection_memoize as connection_memoize
