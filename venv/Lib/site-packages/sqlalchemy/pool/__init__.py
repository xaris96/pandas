# pool/__init__.py
# Copyright (C) 2005-2025 the SQLAlchemy authors and contributors
# <see AUTHORS file>
#
# This module is part of SQLAlchemy and is released under
# the MIT License: https://www.opensource.org/licenses/mit-license.php


"""Connection pooling for DB-API connections.

Provides a number of connection pool implementations for a variety of
usage scenarios and thread behavior requirements imposed by the
application, DB-API or database itself.

Also provides a DB-API 2.0 connection proxying mechanism allowing
regular DB-API connect() methods to be transparently managed by a
SQLAlchemy connection pool.
"""

from . import events
from .base import (
    ConnectionPoolEntry as ConnectionPoolEntry,
    ManagesConnection as ManagesConnection,
    Pool as Pool,
    PoolProxiedConnection as PoolProxiedConnection,
    PoolResetState as PoolResetState,
    _AdhocProxiedConnection as _AdhocProxiedConnection,
    _ConnectionFairy as _ConnectionFairy,
    _ConnectionRecord,
    _CreatorFnType as _CreatorFnType,
    _CreatorWRecFnType as _CreatorWRecFnType,
    _finalize_fairy,
    _ResetStyleArgType as _ResetStyleArgType,
    reset_commit as reset_commit,
    reset_none as reset_none,
    reset_rollback as reset_rollback,
)
from .impl import (
    AssertionPool as AssertionPool,
    AsyncAdaptedQueuePool as AsyncAdaptedQueuePool,
    FallbackAsyncAdaptedQueuePool as FallbackAsyncAdaptedQueuePool,
    NullPool as NullPool,
    QueuePool as QueuePool,
    SingletonThreadPool as SingletonThreadPool,
    StaticPool as StaticPool,
)
