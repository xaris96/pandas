# schema.py
# Copyright (C) 2005-2025 the SQLAlchemy authors and contributors
# <see AUTHORS file>
#
# This module is part of SQLAlchemy and is released under
# the MIT License: https://www.opensource.org/licenses/mit-license.php

"""Compatibility namespace for sqlalchemy.sql.schema and related.

"""

from __future__ import annotations

from .sql.base import SchemaVisitor as SchemaVisitor
from .sql.ddl import (
    DDL as DDL,
    AddConstraint as AddConstraint,
    BaseDDLElement as BaseDDLElement,
    CreateColumn as CreateColumn,
    CreateIndex as CreateIndex,
    CreateSchema as CreateSchema,
    CreateSequence as CreateSequence,
    CreateTable as CreateTable,
    DDLElement as DDLElement,
    DropColumnComment as DropColumnComment,
    DropConstraint as DropConstraint,
    DropConstraintComment as DropConstraintComment,
    DropIndex as DropIndex,
    DropSchema as DropSchema,
    DropSequence as DropSequence,
    DropTable as DropTable,
    DropTableComment as DropTableComment,
    ExecutableDDLElement as ExecutableDDLElement,
    InvokeDDLBase as InvokeDDLBase,
    SetColumnComment as SetColumnComment,
    SetConstraintComment as SetConstraintComment,
    SetTableComment as SetTableComment,
    _CreateDropBase as _CreateDropBase,
    _DropView as _DropView,
    sort_tables as sort_tables,
    sort_tables_and_constraints as sort_tables_and_constraints,
)
from .sql.naming import conv as conv
from .sql.schema import (
    BLANK_SCHEMA as BLANK_SCHEMA,
    CheckConstraint as CheckConstraint,
    Column as Column,
    ColumnCollectionConstraint as ColumnCollectionConstraint,
    ColumnCollectionMixin as ColumnCollectionMixin,
    ColumnDefault as ColumnDefault,
    Computed as Computed,
    Constraint as Constraint,
    DefaultClause as DefaultClause,
    DefaultGenerator as DefaultGenerator,
    FetchedValue as FetchedValue,
    ForeignKey as ForeignKey,
    ForeignKeyConstraint as ForeignKeyConstraint,
    HasConditionalDDL as HasConditionalDDL,
    Identity as Identity,
    Index as Index,
    MetaData as MetaData,
    PrimaryKeyConstraint as PrimaryKeyConstraint,
    SchemaConst as SchemaConst,
    SchemaItem as SchemaItem,
    Sequence as Sequence,
    Table as Table,
    UniqueConstraint as UniqueConstraint,
    _get_table_key as _get_table_key,
    insert_sentinel as insert_sentinel,
)
