# testing/__init__.py
# Copyright (C) 2005-2025 the SQLAlchemy authors and contributors
# <see AUTHORS file>
#
# This module is part of SQLAlchemy and is released under
# the MIT License: https://www.opensource.org/licenses/mit-license.php
# mypy: ignore-errors


from unittest import mock

from . import config
from .assertions import (
    AssertsCompiledSQL,
    AssertsExecutionResults,
    ComparesIndexes,
    ComparesTables,
    assert_raises,
    assert_raises_context_ok,
    assert_raises_message,
    assert_raises_message_context_ok,
    assert_warns,
    assert_warns_message,
    emits_warning,
    emits_warning_on,
    eq_,
    eq_ignore_whitespace,
    eq_regex,
    expect_deprecated,
    expect_deprecated_20,
    expect_raises,
    expect_raises_message,
    expect_warnings,
    in_,
    int_within_variance,
    is_,
    is_false,
    is_instance_of,
    is_none,
    is_not,
    is_not_,
    is_not_none,
    is_true,
    le_,
    ne_,
    not_in,
    not_in_,
    startswith_,
    uses_deprecated,
)
from .config import (
    Variation,
    add_to_marker,
    async_test,
    combinations,
    combinations_list,
    db,
    fixture,
    requirements as requires,
    skip_test,
    variation,
    variation_fixture,
)
from .exclusions import (
    _is_excluded,
    _server_version,
    against as _against,
    db_spec,
    exclude,
    fails,
    fails_if,
    fails_on,
    fails_on_everything_except,
    future,
    only_if,
    only_on,
    skip,
    skip_if,
)
from .schema import (
    eq_clause_element,
    eq_type_affinity,
)
from .util import (
    adict,
    fail,
    flag_combinations,
    force_drop_names,
    lambda_combinations,
    metadata_fixture,
    provide_metadata,
    resolve_lambda,
    rowset,
    run_as_contextmanager,
    skip_if_timeout,
    teardown_events,
)
from .warnings import (
    assert_warnings,
    warn_test_suite,
)


def against(*queries):
    return _against(config._current, *queries)


crashes = skip
