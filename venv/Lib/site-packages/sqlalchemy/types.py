# types.py
# Copyright (C) 2005-2025 the SQLAlchemy authors and contributors
# <see AUTHORS file>
#
# This module is part of SQLAlchemy and is released under
# the MIT License: https://www.opensource.org/licenses/mit-license.php

"""Compatibility namespace for sqlalchemy.sql.types.

"""


from __future__ import annotations

from .sql.sqltypes import (
    ARRAY as ARRAY,
    BIGINT as BIGINT,
    BINARY as BINARY,
    BLOB as BLOB,
    BOOLEAN as BOOLEAN,
    CHAR as CHAR,
    CLOB as CLOB,
    DATE as DATE,
    DATETIME as DATETIME,
    DECIMAL as DECIMAL,
    DOUBLE as DOUBLE,
    DOUBLE_PRECISION as DOUBLE_PRECISION,
    FLOAT as FLOAT,
    INT as INT,
    INTEGER as INTEGER,
    JSON as JSON,
    NCHAR as NCHAR,
    NULLTYPE as NULLTYPE,
    NUMERIC as NUMERIC,
    NVARCHAR as NVARCHAR,
    REAL as REAL,
    SMALLINT as SMALLINT,
    STRINGTYPE as STRINGTYPE,
    TEXT as TEXT,
    TIME as TIME,
    TIMESTAMP as TIMESTAMP,
    UUID as UUID,
    VARBINARY as VARBINARY,
    VARCHAR as VARCHAR,
    BigInteger as BigInteger,
    Boolean as Boolean,
    Concatenable as Concatenable,
    Date as Date,
    DateTime as DateTime,
    Double as Double,
    Enum as Enum,
    Float as Float,
    Indexable as Indexable,
    Integer as Integer,
    Interval as Interval,
    LargeBinary as LargeBinary,
    MatchType as MatchType,
    NullType as NullType,
    Numeric as Numeric,
    PickleType as PickleType,
    SchemaType as SchemaType,
    SmallInteger as SmallInteger,
    String as String,
    Text as Text,
    Time as Time,
    TupleType as TupleType,
    Unicode as Unicode,
    UnicodeText as UnicodeText,
    Uuid as Uuid,
    _Binary as _Binary,
)
from .sql.type_api import (
    ExternalType as ExternalType,
    TypeDecorator as TypeDecorator,
    TypeEngine as TypeEngine,
    UserDefinedType as UserDefinedType,
    Variant as Variant,
    adapt_type as adapt_type,
    to_instance as to_instance,
)
