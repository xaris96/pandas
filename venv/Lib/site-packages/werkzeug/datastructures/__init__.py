from __future__ import annotations

import typing as t

from .accept import (
    Accept as Accept,
    CharsetAccept as CharsetAccept,
    LanguageAccept as LanguageAccept,
    MIMEAccept as MIMEAccept,
)
from .auth import (
    Authorization as Authorization,
    WWWAuthenticate as WWWAuthenticate,
)
from .cache_control import (
    RequestCacheControl as RequestCacheControl,
    ResponseCacheControl as ResponseCacheControl,
)
from .csp import ContentSecurityPolicy as ContentSecurityPolicy
from .etag import ETags as ETags
from .file_storage import (
    FileMultiDict as FileMultiDict,
    FileStorage as FileStorage,
)
from .headers import (
    EnvironHeaders as EnvironHeaders,
    Headers as Headers,
)
from .mixins import (
    ImmutableDictMixin as ImmutableDictMixin,
    ImmutableHeadersMixin as ImmutableHeadersMixin,
    ImmutableListMixin as ImmutableListMixin,
    ImmutableMultiDictMixin as ImmutableMultiDictMixin,
    UpdateDictMixin as UpdateDictMixin,
)
from .range import (
    ContentRange as ContentRange,
    IfRange as IfRange,
    Range as Range,
)
from .structures import (
    CallbackDict as CallbackDict,
    CombinedMultiDict as CombinedMultiDict,
    HeaderSet as HeaderSet,
    ImmutableDict as ImmutableDict,
    ImmutableList as ImmutableList,
    ImmutableMultiDict as ImmutableMultiDict,
    ImmutableTypeConversionDict as ImmutableTypeConversionDict,
    MultiDict as MultiDict,
    TypeConversionDict as TypeConversionDict,
    iter_multi_items as iter_multi_items,
)


def __getattr__(name: str) -> t.Any:
    import warnings

    if name == "OrderedMultiDict":
        from .structures import _OrderedMultiDict

        warnings.warn(
            "'OrderedMultiDict' is deprecated and will be removed in Werkzeug"
            " 3.2. Use 'MultiDict' instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return _OrderedMultiDict

    if name == "ImmutableOrderedMultiDict":
        from .structures import _ImmutableOrderedMultiDict

        warnings.warn(
            "'OrderedMultiDict' is deprecated and will be removed in Werkzeug"
            " 3.2. Use 'ImmutableMultiDict' instead.",
            DeprecationWarning,
            stacklevel=2,
        )
        return _ImmutableOrderedMultiDict

    raise AttributeError(name)
